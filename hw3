
CS615A -- Aspects of System Administration - Spring 2012 - HW#3

HW#3: EC2 Backup

Summary:

The objective of this assignment is for you to create a tool able to perform a backup of a given directory to a data storage device in the cloud. In the process, you will (hopefully) learn a few things about writing modular system tools, about the use of some filesystem level helpers and gain some insights into a cloud-based storage model.

The detailed specification of the program can be found in this manual page (as well as the manual page of the helper tool).

This assignment is worth 100 points (75 points for the "ec2-backup" tool, 25 points for the "ec2-start-instance" tool).

Target platform

The tool you write will be executed (and graded) on lab.cs.stevens.edu. You are free to develop it in some other environment, but please make sure to test it on lab.cs.stevens.edu before submitting it. If it does not work on these hosts, you will not get any points. See also: general homework guidelines.

Programming language

You are free to choose any programming language you like to implement this tool. Obviously, the program needs to be executed/run on linux-lab.cs.stevens.edu and must not require the additional installation of any tools, libraries etc. besides what is already installed there.

Program behaviour

Your program will not require any modification of the environment (ie, you can assume the user has his/her environment set up for EC2), and exection of the program will be exactly as outlined in the manual pages ec2-backup(1) and ec2-start-instance(1).

Notes

You may choose to implement the programs in any way you like, including breaking it down into smaller individual components.

You probably want to make sure that your program exhibits the various features of good software engineering practices we discussed. Please make sure to consider these and have your submission reflect wherever possible.

It is probably in your interest to accompany your sibmission with some commentary on why you chose the programming language, the approach you took, any considerations you might have. The more thought I see you put into the assignment, the better.

You may collaborate loosely with other students, but each submission must be your own. This is not a group assignment.

You may use code you find on the internet if and only if you explicitly note which parts are not your own and the code in question is licensed such that you can use it in this manner.

This is not a trivial assignment. Please do not delay starting to work on it.

Deliverables and Due Date

You will submit a single tar(1) archive. The file to submit will be called "$USER-hw3.tar" (where "$USER" is your username). The archive will extract all files and subdirectories into a directory named $USER.

You will only submit source files -- no binaries or executables of any kind. You may additionally include a single file called README in which you may provide commentary on your program. Commentary elaborating on the scalability of the tool in general and your implementation in particular is welcome.

The folllowing is an example sequence of commands to create a valid homework submission:

mkdir $USER
cd $USER
vi README
vi ec2-start-instance
[code code code]
vi ec2-backup
[code code code]
cd ..
tar cf $USER-hw3.tar $USER
The due date for this assignment is 2012-03-19 18:00. Please attach the file to an email sent from your @stevens.edu email address to jschauma@stevens.edu with a subject of "[CS615] HW3".

[Course Website]





EC2-BACKUP(1)             BSD General Commands Manual            EC2-BACKUP(1)

NAME
     ec2-backup -- backup a directory into Elastic Block Storage (EBS)

SYNOPSIS
     ec2-backup [-hv] [-i instance] [-t tag] -d dir

DESCRIPTION
     The ec2-backup tool performs a backup of the given directory into Amazon
     Elastic Block Storage (EBS).  This is achieved by creating a volume of
     the appropriate size, attaching it to an EC2 instance and finally copying
     the files from the given directory into this volume.

OPTIONS
     ec2-backup accepts the following command-line flags:

     -h           Print a usage statement and exit.

     -i instance  Attach the volume in question to the given instance.

     -m method    Use the given method to perform the backup.  Valid methos
                  are 'dd' and 'rsync'; default is 'dd'.

     -t tag       Use the volume with the given tag.  If no tag is specified,
                  use 'ec2-backup'.  If no such volume exists, create a new
                  one and apply the given tag.

     -v           Be verbose.  If not specified, ec2-backup will not generate
                  any output at all (unless an error is encountered).

DETAILS
     ec2-backup will perform a backup of the given directory to an ESB volume.
     The backup is done in one of two ways: via direct write to the volume
     (utilizing tar(1) on the local host and dd(1) on the remote instance), or
     via a (possibly incremental) filesystem sync (utilizing rsync(1)).

     ec2-backup will create a new volume (unless the -t flag was specified and
     a volume matching the given tag already exists).  The new volume will be
     at least two times the size of the directory to be backed up.

     Unless an instance is given using the -i flag, ec2-backup will create an
     instance suitable to perform the backup, attach the volume in question
     and then back up the data from the given directory using the specified
     method and then shut down the instance it created.

OUTPUT
     Unless the -v flag is given, ec2-backup will not generate any output
     unless any errors are encountered.  Otherwise, it may print out some use-
     ful information about what steps it is currently performing.

     Any errors encountered cause a meaningful error message to be printed to
     STDERR.

EXIT STATUS
     The ec2-backup will exit with a return status of 0 under normal circum-
     stances.  If an error occurred, ec2-backup will exit with a value >0.

EXAMPLES
     The following examples illustrate common usage of this tool.

     To back up the entire filesystem to a volume tagged as 'backup' (which,
     it should be noted, must hence also contain a filesystem) using rsync(1):

           ec2-backup -t backup -m rsync -d /

     To create a complete backup of the current working directory using
     defaults (and thus not requiring a filesystem to exist on the volume):

           ec2-backup -d .

SEE ALSO
     dd(1), ec2-start-instance(1), tar(1), rsync(1)

HISTORY
     ec2-backup was originally assigned by Jan Schaumann
     <jschauma@cs.stevens.edu> as a homework assignment for the class "Aspects
     of System Administration" at Stevens Institute of Technology in the
     Spring of 2011.

BSD                            February 25, 2012                           BSD





EC2-START-INSTANCE(1)     BSD General Commands Manual    EC2-START-INSTANCE(1)

NAME
     ec2-start-instance -- start an EC2 instance and wait for it to be running

SYNOPSIS
     ec2-start-instance [-hv] [-a ami]

DESCRIPTION
     The ec2-start-instance tool will start an EC2 instance and wait for it to
     be running, then print to STDOUT the instance identifier and the host-
     name.  As the tool honors a number of environment variables as noted in
     the section ENVIRONMENT, it is useful for scripting other, more advanced
     tools.

OPTIONS
     ec2-start-instance accepts the following command-line flags:

     -a AMI  Start an instance of the given AMI.  If not specified,
             ec2-start-instance will default to ami-b232d0db.

     -h      Print a usage statement and exit.

     -v      Be verbose.  If not specified, ec2-start-instance will not gener-
             ate any output other than the final instance identifier and the
             hostname.

OUTPUT
     Unless the -v flag is given, the only output generated on STDOUT is a
     pair of strings: the instance identifier and the hostname of the new run-
     ning instance.  See the section EXAMPLES for expected output.

     If the -v flag is given, ec2-start-instance may print out some useful
     information about what steps it is currently performing.

     Any errors encountered cause a meaningful error message to be printed to
     STDERR.

EXIT STATUS
     The ec2-start-instance will exit with a return status of 0 under normal
     circumstances.  If an error occurred, ec2-start-instance will exit with a
     value >0.

EXAMPLES
     The following examples illustrate common usage of this tool.

           $ ec2-start-instance -a ami-19a34270
           i-db464ab7 ec2-75-101-236-71.compute-1.amazonaws.com
           $

ENVIRONMENT
     ec2-start-instance assumes that the user has set up their environment for
     general use with the EC2 tools.  That is, it will not set or modify the
     variables EC2_CERT, EC2_HOME and EC2_PRIVATE_KEY.

     ec2-start-instance allows the user to add custom flags to the
     ec2-run-instances(1) command via the EC2_RUN_INSTANCES_FLAGS environment
     variable.  If this variable is not set, ec2-start-instance will not
     append any flags to the command besides -a ami.

SEE ALSO
     ec2-run-instances(1), ec2-describe-instances(1), ping(8)

HISTORY
     ec2-start-instance was originally assigned by Jan Schaumann
     <jschauma@cs.stevens.edu> as a homework assignment for the class "Aspects
     of System Administration" at Stevens Institute of Technology in the
     Spring of 2011.

BSD                             March 06, 2011                             BSD